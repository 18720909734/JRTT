// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.dl7.mvp.module.manage.download.complete;

import com.dl7.mvp.adapter.BaseVideoDLAdapter;
import com.dl7.mvp.module.base.IRxBusPresenter;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class VideoCompleteFragment_MembersInjector
    implements MembersInjector<VideoCompleteFragment> {
  private final Provider<IRxBusPresenter> mPresenterProvider;

  private final Provider<BaseVideoDLAdapter> mAdapterProvider;

  public VideoCompleteFragment_MembersInjector(
      Provider<IRxBusPresenter> mPresenterProvider, Provider<BaseVideoDLAdapter> mAdapterProvider) {
    assert mPresenterProvider != null;
    this.mPresenterProvider = mPresenterProvider;
    assert mAdapterProvider != null;
    this.mAdapterProvider = mAdapterProvider;
  }

  public static MembersInjector<VideoCompleteFragment> create(
      Provider<IRxBusPresenter> mPresenterProvider, Provider<BaseVideoDLAdapter> mAdapterProvider) {
    return new VideoCompleteFragment_MembersInjector(mPresenterProvider, mAdapterProvider);
  }

  @Override
  public void injectMembers(VideoCompleteFragment instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    com.dl7.mvp.module.base.BaseFragment_MembersInjector.injectMPresenter(
        instance, mPresenterProvider);
    com.dl7.mvp.module.base.BaseVideoDLFragment_MembersInjector.injectMAdapter(
        instance, mAdapterProvider);
  }
}
