// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.dl7.mvp.injector.modules;

import com.dl7.recycler.adapter.BaseQuickAdapter;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class SpecialModule_ProvideSpecialAdapterFactory implements Factory<BaseQuickAdapter> {
  private final SpecialModule module;

  public SpecialModule_ProvideSpecialAdapterFactory(SpecialModule module) {
    assert module != null;
    this.module = module;
  }

  @Override
  public BaseQuickAdapter get() {
    return Preconditions.checkNotNull(
        module.provideSpecialAdapter(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<BaseQuickAdapter> create(SpecialModule module) {
    return new SpecialModule_ProvideSpecialAdapterFactory(module);
  }
}
