// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.dl7.mvp.module.photo.bigphoto;

import com.dl7.mvp.adapter.PhotoPagerAdapter;
import com.dl7.mvp.module.base.ILocalPresenter;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class BigPhotoActivity_MembersInjector implements MembersInjector<BigPhotoActivity> {
  private final Provider<ILocalPresenter> mPresenterProvider;

  private final Provider<PhotoPagerAdapter> mAdapterProvider;

  public BigPhotoActivity_MembersInjector(
      Provider<ILocalPresenter> mPresenterProvider, Provider<PhotoPagerAdapter> mAdapterProvider) {
    assert mPresenterProvider != null;
    this.mPresenterProvider = mPresenterProvider;
    assert mAdapterProvider != null;
    this.mAdapterProvider = mAdapterProvider;
  }

  public static MembersInjector<BigPhotoActivity> create(
      Provider<ILocalPresenter> mPresenterProvider, Provider<PhotoPagerAdapter> mAdapterProvider) {
    return new BigPhotoActivity_MembersInjector(mPresenterProvider, mAdapterProvider);
  }

  @Override
  public void injectMembers(BigPhotoActivity instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    com.dl7.mvp.module.base.BaseActivity_MembersInjector.injectMPresenter(
        instance, mPresenterProvider);
    instance.mAdapter = mAdapterProvider.get();
  }

  public static void injectMAdapter(
      BigPhotoActivity instance, Provider<PhotoPagerAdapter> mAdapterProvider) {
    instance.mAdapter = mAdapterProvider.get();
  }
}
